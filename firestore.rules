rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Rules for the collections collection
    match /collections/{collectionId} {
      allow read: if resource.data.published == true || request.auth != null && request.auth.uid == resource.data.createdBy;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
          request.auth.uid == request.resource.data.createdBy || // Allow creator to update
          (request.resource.data.userLikes.size() == resource.data.userLikes.size() + 1 && request.resource.data.userLikes.hasOnly([request.auth.uid])) || // Allow user to add their UID
          (request.resource.data.userLikes.size() == resource.data.userLikes.size() - 1 && resource.data.userLikes.hasOnly([request.auth.uid])) // Allow user to remove their UID
      );
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }

    //// Rules for the collections collection
    match /products/{productId} {
      allow read: if resource.data.published == true || request.auth != null && request.auth.uid == resource.data.createdBy;
      allow create: if request.auth != null; 
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy; 
    }
    //// Rules for the users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId; 
    }
  }
}