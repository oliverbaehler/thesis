name: Deploy to Firebase Production
on:
  push:
    branches:
      - main
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    environment: production
    env:
      FIREBASE_CLI_EXPERIMENTS: webframeworks
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
      - run: npm ci && npm run build
      - uses: FirebaseExtended/action-hosting-deploy@d482eb942f549f059116ec36b191860128553142
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      - name: Check if a comment with the preview URL already exists
        id: check-comment
        run: |
          comments=$(gh pr view ${{ github.event.pull_request.number }} --json comments --jq '.comments[].body')
          if echo "$comments" | grep -q "Preview URL"; then
            echo "comment_exists=true" >> $GITHUB_ENV
          else
            echo "comment_exists=false" >> $GITHUB_ENV
          fi

      - name: Comment on PR with the Preview URL
        if: env.comment_exists == 'false'
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "ðŸš€ Preview URL: ${{ steps.deploy.outputs.urls }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
